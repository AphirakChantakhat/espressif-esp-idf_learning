#include <stdio.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "esp_system.h"
#include "driver/i2c.h"
#include "esp_log.h"

#define I2C_MASTER_SCL_IO 22   // Define the I2C pins for your setup
#define I2C_MASTER_SDA_IO 21

#define I2C_MASTER_FREQ_HZ 100000  // I2C master clock frequency
#define LCD_ADDR 0x27              // I2C address of the LCD1602

static const char *TAG = "LCD1602 Example";

void i2c_master_init() {
    i2c_config_t conf;
    conf.mode = I2C_MODE_MASTER;
    conf.sda_io_num = I2C_MASTER_SDA_IO;
    conf.sda_pullup_en = GPIO_PULLUP_ENABLE;
    conf.scl_io_num = I2C_MASTER_SCL_IO;
    conf.scl_pullup_en = GPIO_PULLUP_ENABLE;
    conf.master.clk_speed = I2C_MASTER_FREQ_HZ;
    ESP_ERROR_CHECK(i2c_param_config(I2C_NUM_0, &conf));
    ESP_ERROR_CHECK(i2c_driver_install(I2C_NUM_0, I2C_MODE_MASTER, 0, 0, 0));
}

void lcd_command(int command) {
    i2c_cmd_handle_t cmd = i2c_cmd_link_create();
    i2c_master_start(cmd);
    i2c_master_write_byte(cmd, (LCD_ADDR << 1) | I2C_MASTER_WRITE, true);
    i2c_master_write_byte(cmd, command, true);
    i2c_master_stop(cmd);
    esp_err_t ret = i2c_master_cmd_begin(I2C_NUM_0, cmd, 1000 / portTICK_RATE_MS);
    if (ret != ESP_OK) {
        ESP_LOGE(TAG, "I2C command failed: %d", ret);
    }
    i2c_cmd_link_delete(cmd);
}

void lcd_data(int data) {
    i2c_cmd_handle_t cmd = i2c_cmd_link_create();
    i2c_master_start(cmd);
    i2c_master_write_byte(cmd, (LCD_ADDR << 1) | I2C_MASTER_WRITE, true);
    i2c_master_write_byte(cmd, (data | 0x080), true);
    i2c_master_stop(cmd);
    esp_err_t ret = i2c_master_cmd_begin(I2C_NUM_0, cmd, 1000 / portTICK_RATE_MS);
    if (ret != ESP_OK) {
        ESP_LOGE(TAG, "I2C data failed: %d", ret);
    }
    i2c_cmd_link_delete(cmd);
}

void lcd_init() {
    lcd_command(0x33);  // Initialization code
    lcd_command(0x32);  // Initialization code
    lcd_command(0x28);  // 4-bit mode, 2-line, 5x8 font
    lcd_command(0x0C);  // Display on, cursor off, blink off
    lcd_command(0x01);  // Clear display
    vTaskDelay(10 / portTICK_PERIOD_MS);
}

void lcd_print(const char *str) {
    while (*str) {
        lcd_data(*str);
        str++;
    }
}

void app_main() {
    i2c_master_init();
    lcd_init();
    ESP_LOGI(TAG, "LCD1602 Initialized");

    lcd_print("Hello, World!");
    vTaskDelay(3000 / portTICK_PERIOD_MS);
}